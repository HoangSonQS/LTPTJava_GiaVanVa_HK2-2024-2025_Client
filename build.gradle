plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
}

group 'iuh.fit'
version 'FINAL'

repositories {
    mavenCentral()
}

javafx {
    version = "23"
    modules = ['javafx.controls', 'javafx.fxml']
}

java {
    sourceCompatibility = '23'
    targetCompatibility = '23'
}

application {
    mainClass = 'iuh.fit.App'
}

ext {
    junitVersion = '5.10.2'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation 'org.hibernate:hibernate-core:6.4.5.Final'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.5'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.5.1'
    implementation 'com.microsoft.sqlserver:mssql-jdbc:11.2.3.jre17'
    implementation 'net.datafaker:datafaker:2.4.2'
    implementation files("libs/LTPTJava_GiaVanVa_HK2.jar")

    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
    jpackage {
        installerType = 'msi'
        outputDir = "dist"
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'iuh.fit.App',
                'Class-Path': configurations.runtimeClasspath.files.collect { it.name }.join(' ')
        )
    }

    from {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    from('src/main/resources') {
        include '**/*'
    }

    // Include JavaFX modules
    from(files(System.getenv('PATH_TO_FX') ?: 'D:/Java/JavaFX/javafx-sdk-23/lib')) {
        include '*.jar'
        include '*.dll'
    }

    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'META-INF/MANIFEST.MF'
}

// Tạo task chạy JAR file
task runJar(type: JavaExec) {
    classpath = files("$buildDir/libs/${project.name}-${version}.jar")
    mainClass = 'iuh.fit.App'
    jvmArgs = [
            '--module-path', System.getenv('PATH_TO_FX') ?: 'D:/Java/JavaFX/javafx-sdk-23/lib',
            '--add-modules', 'javafx.controls,javafx.fxml'
    ]
}

run {
    doFirst {
        jvmArgs = [
                '--module-path', System.getenv('PATH_TO_FX') ?: 'D:/Java/JavaFX/javafx-sdk-23/lib',
                '--add-modules', 'javafx.controls,javafx.fxml'
        ]
    }
}

task App(type: JavaExec) {
    group = "application"
    description = "Run App"
    mainClass = "iuh.fit.App"
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = [
            "--module-path", configurations.runtimeClasspath.asPath,
            "--add-modules", "javafx.controls,javafx.fxml",
            "-Djava.security.policy=${projectDir}/rmi.policy",
            "-Djava.rmi.server.hostname=LAPTOP-O8OOBHDK"
    ]
}

test {
    useJUnitPlatform()
}

tasks.withType(AbstractArchiveTask) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}